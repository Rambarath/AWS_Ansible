---

# Ansible module to create AWS VPC, registering the output into vpc_name

- name: creating VPC
  ec2_vpc_net:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ region }}"
  register: vpc_name1


# Retrieve VPC Id from the output saved in vpc_name

- name: "Retrieving VPC ID"
  set_fact:
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          vpc_id: "{{ vpc_name1.vpc.id }}"

# Creating VPC Subnets with the list provided in var folder


- name: Create Public and Private Subnets
  ec2_vpc_subnet:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    vpc_id: "{{ vpc_id }}"
    cidr: "{{ item.value.cidr }}"
    az: "{{ item.value.az }}"
    tags:
      Name: "{{ item.key }}"
  with_dict: "{{ vpc_subnets }}"
  register: create_vpc_subnets
     
#Looping the multiple subnets based on the saved registery of subnet details

- name: "Retrieving Private and Public subnets from the registry"
  set_fact:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    vpc_subnet_ids: "{{ vpc_subnet_ids | default({}) | combine({ item.subnet.tags.Name: item.subnet.id }) }}"

  loop: "{{create_vpc_subnets.results}}"

# Going through the list of security groups mentioned in Var folder


- name: create VPC security groups
  ec2_group:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    vpc_id: "{{ vpc_id }}"
    rules: "{{ item.rules }}"
  loop: "{{ vpc_security_groups }}"
  

- name: create EC2 key
  ec2_key:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"   
    name: "{{ EC2_key }}"

